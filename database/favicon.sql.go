// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: favicon.sql

package database

import (
	"context"
	"database/sql"
)

const getFavicons = `-- name: GetFavicons :many
SELECT host, svg, png, ico
FROM favicons
`

type GetFaviconsRow struct {
	Host string         `json:"host"`
	Svg  sql.NullString `json:"svg"`
	Png  sql.NullString `json:"png"`
	Ico  sql.NullString `json:"ico"`
}

func (q *Queries) GetFavicons(ctx context.Context) ([]GetFaviconsRow, error) {
	rows, err := q.db.QueryContext(ctx, getFavicons)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetFaviconsRow
	for rows.Next() {
		var i GetFaviconsRow
		if err := rows.Scan(
			&i.Host,
			&i.Svg,
			&i.Png,
			&i.Ico,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const updateFaviconCache = `-- name: UpdateFaviconCache :exec
REPLACE
INTO favicons (host, svg, png, ico)
VALUES (?, ?, ?, ?)
`

type UpdateFaviconCacheParams struct {
	Host string         `json:"host"`
	Svg  sql.NullString `json:"svg"`
	Png  sql.NullString `json:"png"`
	Ico  sql.NullString `json:"ico"`
}

func (q *Queries) UpdateFaviconCache(ctx context.Context, arg UpdateFaviconCacheParams) error {
	_, err := q.db.ExecContext(ctx, updateFaviconCache,
		arg.Host,
		arg.Svg,
		arg.Png,
		arg.Ico,
	)
	return err
}
